digraph "ChessboardDetector"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ChessboardDetector\n|- maxAxis\l- scale\l|+ ChessboardDetector()\l+ ~ChessboardDetector()\l+ findChessboardCorners()\l+ perspectiveChessboard()\l+ detectionResult()\l+ getResult()\l+ getOriginalCorners()\l+ preprocess()\l- _compute_perspective\l_transform()\l- _compute_bounding_box()\l- _compute_bounding_rectangle()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Implementation of chessboard detection."];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -fianlDetectionResult" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{ChessboardDetectorResult\n|+ success\l+ corners\l+ boundingBox\l+ boundingRectangle\l+ image\l+ perspective\l+ perspectiveCopy\l+ unitWidth\l+ unitHeight\l+ scale\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_chessboard_detector_result.html",tooltip="Structure that contains the result of chessboard detection."];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -originalCorners" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{FindCornersResult\n|+ success\l+ corners\l+ image\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_find_corners_result.html",tooltip="Structure that contains the result of corner detection."];
}
