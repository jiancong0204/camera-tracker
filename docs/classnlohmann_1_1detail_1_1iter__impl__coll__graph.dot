digraph "nlohmann::detail::iter_impl&lt; BasicJsonType &gt;"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{nlohmann::detail::iter\l_impl\< BasicJsonType \>\n|- BasicJsonType\l- iteration_proxy\< iter\l_impl \>\l- iteration_proxy_value\l\< iter_impl \>\l- m_object\l|+ iter_impl()\l+ iter_impl()\l+ iter_impl()\l+ operator=()\l+ iter_impl()\l+ operator=()\l+ operator*()\l+ operator-\>()\l+ operator++()\l+ operator++()\land 16 more...\l- set_begin()\l- set_end()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="a template for a bidirectional iterator for the basic_json class This class implements a both iterato..."];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_it" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{nlohmann::detail::internal\l_iterator\< typename std\l::remove_const\< BasicJsonType\l \>::type \>\n|+ object_iterator\l+ array_iterator\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structnlohmann_1_1detail_1_1internal__iterator.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +primitive_iterator" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{nlohmann::detail::primitive\l_iterator_t\n|- m_it\l- begin_value\l- end_value\l|+ get_value()\l+ set_begin()\l+ set_end()\l+ is_begin()\l+ is_end()\l+ operator+()\l+ operator++()\l+ operator++()\l+ operator--()\l+ operator--()\l+ operator+=()\l+ operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classnlohmann_1_1detail_1_1primitive__iterator__t.html",tooltip=" "];
}
